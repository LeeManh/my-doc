"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([[452],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,c=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=s(t),d=c,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(g,o(o({ref:n},p),{},{components:t})):r.createElement(g,o({ref:n},p))}));function d(e,n){var t=arguments,c=n&&n.mdxType;if("string"==typeof e||c){var i=t.length,o=new Array(i);o[0]=m;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:c,o[1]=a;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1224:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var r=t(7462),c=(t(7294),t(3905));const i={},o="Generics",a={unversionedId:"typescript/Generics/generics",id:"typescript/Generics/generics",title:"Generics",description:"Generics cho ph\xe9p s\u1eed d\u1ee5ng types nh\u01b0 1 tham s\u1ed1 th\xf4ng th\u01b0\u1eddng",source:"@site/docs/typescript/Generics/1.generics.md",sourceDirName:"typescript/Generics",slug:"/typescript/Generics/generics",permalink:"/my-doc/typescript/Generics/generics",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/typescript/Generics/1.generics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Generics",permalink:"/my-doc/category/generics"},next:{title:"Generic Constraints",permalink:"/my-doc/typescript/Generics/constraints"}},l={},s=[{value:"Introduction to TypeScript Generics",id:"introduction-to-typescript-generics",level:2},{value:"Calling a generic function",id:"calling-a-generic-function",level:2},{value:"Generic functions with multiple types",id:"generic-functions-with-multiple-types",level:2}],p={toc:s};function u(e){let{components:n,...t}=e;return(0,c.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"generics"},"Generics"),(0,c.kt)("p",null,"Generics cho ph\xe9p s\u1eed d\u1ee5ng types nh\u01b0 1 tham s\u1ed1 th\xf4ng th\u01b0\u1eddng"),(0,c.kt)("h2",{id:"introduction-to-typescript-generics"},"Introduction to TypeScript Generics"),(0,c.kt)("p",null,"Generics cho ph\xe9p b\u1ea1n vi\u1ebft function, classes, interface c\xf3 th\u1ec3 t\xe1i s\u1eed d\u1ee5ng"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"// h\xe0m nh\u1eadn tham s\u1ed1 l\xe0 1 m\u1ea3ng c\xf3 ki\u1ec3u d\u1eef li\u1ec7u l\xe0 T v\xe0 tr\u1ea3 v\u1ec1 ki\u1ec3u d\u1eed li\u1ec7u l\xe0 T\nfunction getRandomElement<T>(items: T[]): T {\n  let randomIndex = Math.floor(Math.random() * items.length);\n  return items[randomIndex];\n}\n")),(0,c.kt)("h2",{id:"calling-a-generic-function"},"Calling a generic function"),(0,c.kt)("p",null,"V\xed d\u1ee5 v\u1ec1 c\xe1ch s\u1eed d\u1ee5ng ",(0,c.kt)("inlineCode",{parentName:"p"},"getRandomElement()")," v\u1edbi 1 m\u1ea3ng number"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"let numbers = [1, 5, 7, 4, 2, 9];\nlet randomEle = getRandomElement<number>(numbers);\nconsole.log(randomEle);\n")),(0,c.kt)("p",null,"V\xed d\u1ee5 tr\xean truy\u1ec1n ki\u1ec3u ",(0,c.kt)("inlineCode",{parentName:"p"},"number")," v\xe0o T 1 c\xe1nh r\xf5 r\xe0ng."),(0,c.kt)("p",null,"Nh\u01b0ng trong th\u1ef1c t\u1ebf b\u1ea1n s\u1ebd s\u1eed d\u1ee5ng ",(0,c.kt)("strong",{parentName:"p"},"type inference")," cho tham s\u1ed1. C\xf3 ng\u0129a l\xe0 tr\xecnh bi\xean d\u1ecbch \u0111\u1eb7t gi\xe1 tr\u1ecb c\u1ee7a T 1 c\xe1ch t\u1ef1 \u0111\u1ed9ng d\u1ef1a tr\xean tham s\u1ed1 b\u1ea1n truy\u1ec1n v\xe0o nh\u01b0 v\xed d\u1ee5 sau."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"let numbers = [1, 5, 7, 4, 2, 9];\nlet randomEle = getRandomElement(numbers);\nconsole.log(randomEle);\n")),(0,c.kt)("p",null,"V\xed d\u1ee5 tr\xean , kh\xf4ng truy\u1ec1n v\xe0o type number v\xe0o 1 c\xe1ch r\xf5 r\xe0ng. Tr\xecnh bi\xean d\u1ecbch nh\xecn v\xe0o tham s\u1ed1 v\xe0 t\u1ef1 suy lu\u1eadn\nth\xe0nh number v\xe0 set T th\xe0nh number"),(0,c.kt)("h2",{id:"generic-functions-with-multiple-types"},"Generic functions with multiple types"),(0,c.kt)("p",null,"V\xed d\u1ee5 v\u1ec1 c\xe1ch s\u1eed generic funtion v\u1edbi 2 tham s\u1ed1 types U v\xe0 V"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"function merge<U, V>(obj1: U, obj2: V) {\n  return {\n    ...obj1,\n    ...obj2,\n  };\n}\n")),(0,c.kt)("p",null,"S\u1eed d\u1ee5ng :"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},'let result = merge({ name: "John" }, { jobTitle: "Frontend Developer" });\n\nconsole.log(result);\n')),(0,c.kt)("p",null,"Output"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"{ name: 'John', jobTitle: 'Frontend Developer' }\n")))}u.isMDXComponent=!0}}]);